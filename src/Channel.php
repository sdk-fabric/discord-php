<?php
/**
 * Channel automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Discord;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('')]
class Channel implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Description('')]
    protected ?string $id = null;
    #[Description('')]
    protected ?int $type = null;
    #[Key('guild_id')]
    #[Description('')]
    protected ?string $guildId = null;
    #[Description('')]
    protected ?int $position = null;
    #[Description('')]
    protected ?string $name = null;
    #[Description('')]
    protected ?string $topic = null;
    #[Description('')]
    protected ?bool $nsfw = null;
    #[Key('last_message_id')]
    #[Description('')]
    protected ?string $lastMessageId = null;
    #[Description('')]
    protected ?int $bitrate = null;
    #[Key('user_limit')]
    #[Description('')]
    protected ?int $userLimit = null;
    #[Key('rate_limit_per_user')]
    #[Description('')]
    protected ?int $rateLimitPerUser = null;
    #[Description('')]
    protected ?string $icon = null;
    #[Key('owner_id')]
    #[Description('')]
    protected ?string $ownerId = null;
    #[Key('application_id')]
    #[Description('')]
    protected ?string $applicationId = null;
    #[Description('')]
    protected ?bool $managed = null;
    #[Key('parent_id')]
    #[Description('')]
    protected ?string $parentId = null;
    #[Key('last_pin_timestamp')]
    #[Description('')]
    protected ?string $lastPinTimestamp = null;
    #[Key('rtc_region')]
    #[Description('')]
    protected ?string $rtcRegion = null;
    #[Key('video_quality_mode')]
    #[Description('')]
    protected ?int $videoQualityMode = null;
    #[Key('message_count')]
    #[Description('')]
    protected ?int $messageCount = null;
    #[Key('member_count')]
    #[Description('')]
    protected ?int $memberCount = null;
    #[Key('default_auto_archive_duration')]
    #[Description('')]
    protected ?int $defaultAutoArchiveDuration = null;
    #[Description('')]
    protected ?string $permissions = null;
    #[Description('')]
    protected ?int $flags = null;
    #[Key('total_message_sent')]
    #[Description('')]
    protected ?int $totalMessageSent = null;
    #[Key('default_sort_order')]
    #[Description('')]
    protected ?int $defaultSortOrder = null;
    #[Key('default_forum_layout')]
    #[Description('')]
    protected ?int $defaultForumLayout = null;
    public function setId(?string $id) : void
    {
        $this->id = $id;
    }
    public function getId() : ?string
    {
        return $this->id;
    }
    public function setType(?int $type) : void
    {
        $this->type = $type;
    }
    public function getType() : ?int
    {
        return $this->type;
    }
    public function setGuildId(?string $guildId) : void
    {
        $this->guildId = $guildId;
    }
    public function getGuildId() : ?string
    {
        return $this->guildId;
    }
    public function setPosition(?int $position) : void
    {
        $this->position = $position;
    }
    public function getPosition() : ?int
    {
        return $this->position;
    }
    public function setName(?string $name) : void
    {
        $this->name = $name;
    }
    public function getName() : ?string
    {
        return $this->name;
    }
    public function setTopic(?string $topic) : void
    {
        $this->topic = $topic;
    }
    public function getTopic() : ?string
    {
        return $this->topic;
    }
    public function setNsfw(?bool $nsfw) : void
    {
        $this->nsfw = $nsfw;
    }
    public function getNsfw() : ?bool
    {
        return $this->nsfw;
    }
    public function setLastMessageId(?string $lastMessageId) : void
    {
        $this->lastMessageId = $lastMessageId;
    }
    public function getLastMessageId() : ?string
    {
        return $this->lastMessageId;
    }
    public function setBitrate(?int $bitrate) : void
    {
        $this->bitrate = $bitrate;
    }
    public function getBitrate() : ?int
    {
        return $this->bitrate;
    }
    public function setUserLimit(?int $userLimit) : void
    {
        $this->userLimit = $userLimit;
    }
    public function getUserLimit() : ?int
    {
        return $this->userLimit;
    }
    public function setRateLimitPerUser(?int $rateLimitPerUser) : void
    {
        $this->rateLimitPerUser = $rateLimitPerUser;
    }
    public function getRateLimitPerUser() : ?int
    {
        return $this->rateLimitPerUser;
    }
    public function setIcon(?string $icon) : void
    {
        $this->icon = $icon;
    }
    public function getIcon() : ?string
    {
        return $this->icon;
    }
    public function setOwnerId(?string $ownerId) : void
    {
        $this->ownerId = $ownerId;
    }
    public function getOwnerId() : ?string
    {
        return $this->ownerId;
    }
    public function setApplicationId(?string $applicationId) : void
    {
        $this->applicationId = $applicationId;
    }
    public function getApplicationId() : ?string
    {
        return $this->applicationId;
    }
    public function setManaged(?bool $managed) : void
    {
        $this->managed = $managed;
    }
    public function getManaged() : ?bool
    {
        return $this->managed;
    }
    public function setParentId(?string $parentId) : void
    {
        $this->parentId = $parentId;
    }
    public function getParentId() : ?string
    {
        return $this->parentId;
    }
    public function setLastPinTimestamp(?string $lastPinTimestamp) : void
    {
        $this->lastPinTimestamp = $lastPinTimestamp;
    }
    public function getLastPinTimestamp() : ?string
    {
        return $this->lastPinTimestamp;
    }
    public function setRtcRegion(?string $rtcRegion) : void
    {
        $this->rtcRegion = $rtcRegion;
    }
    public function getRtcRegion() : ?string
    {
        return $this->rtcRegion;
    }
    public function setVideoQualityMode(?int $videoQualityMode) : void
    {
        $this->videoQualityMode = $videoQualityMode;
    }
    public function getVideoQualityMode() : ?int
    {
        return $this->videoQualityMode;
    }
    public function setMessageCount(?int $messageCount) : void
    {
        $this->messageCount = $messageCount;
    }
    public function getMessageCount() : ?int
    {
        return $this->messageCount;
    }
    public function setMemberCount(?int $memberCount) : void
    {
        $this->memberCount = $memberCount;
    }
    public function getMemberCount() : ?int
    {
        return $this->memberCount;
    }
    public function setDefaultAutoArchiveDuration(?int $defaultAutoArchiveDuration) : void
    {
        $this->defaultAutoArchiveDuration = $defaultAutoArchiveDuration;
    }
    public function getDefaultAutoArchiveDuration() : ?int
    {
        return $this->defaultAutoArchiveDuration;
    }
    public function setPermissions(?string $permissions) : void
    {
        $this->permissions = $permissions;
    }
    public function getPermissions() : ?string
    {
        return $this->permissions;
    }
    public function setFlags(?int $flags) : void
    {
        $this->flags = $flags;
    }
    public function getFlags() : ?int
    {
        return $this->flags;
    }
    public function setTotalMessageSent(?int $totalMessageSent) : void
    {
        $this->totalMessageSent = $totalMessageSent;
    }
    public function getTotalMessageSent() : ?int
    {
        return $this->totalMessageSent;
    }
    public function setDefaultSortOrder(?int $defaultSortOrder) : void
    {
        $this->defaultSortOrder = $defaultSortOrder;
    }
    public function getDefaultSortOrder() : ?int
    {
        return $this->defaultSortOrder;
    }
    public function setDefaultForumLayout(?int $defaultForumLayout) : void
    {
        $this->defaultForumLayout = $defaultForumLayout;
    }
    public function getDefaultForumLayout() : ?int
    {
        return $this->defaultForumLayout;
    }
    public function toRecord() : \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('id', $this->id);
        $record->put('type', $this->type);
        $record->put('guild_id', $this->guildId);
        $record->put('position', $this->position);
        $record->put('name', $this->name);
        $record->put('topic', $this->topic);
        $record->put('nsfw', $this->nsfw);
        $record->put('last_message_id', $this->lastMessageId);
        $record->put('bitrate', $this->bitrate);
        $record->put('user_limit', $this->userLimit);
        $record->put('rate_limit_per_user', $this->rateLimitPerUser);
        $record->put('icon', $this->icon);
        $record->put('owner_id', $this->ownerId);
        $record->put('application_id', $this->applicationId);
        $record->put('managed', $this->managed);
        $record->put('parent_id', $this->parentId);
        $record->put('last_pin_timestamp', $this->lastPinTimestamp);
        $record->put('rtc_region', $this->rtcRegion);
        $record->put('video_quality_mode', $this->videoQualityMode);
        $record->put('message_count', $this->messageCount);
        $record->put('member_count', $this->memberCount);
        $record->put('default_auto_archive_duration', $this->defaultAutoArchiveDuration);
        $record->put('permissions', $this->permissions);
        $record->put('flags', $this->flags);
        $record->put('total_message_sent', $this->totalMessageSent);
        $record->put('default_sort_order', $this->defaultSortOrder);
        $record->put('default_forum_layout', $this->defaultForumLayout);
        return $record;
    }
    public function jsonSerialize() : object
    {
        return (object) $this->toRecord()->getAll();
    }
}
