<?php
/**
 * ChannelInvite automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Discord;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('')]
class ChannelInvite implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Key('max_age')]
    #[Description('')]
    protected ?int $maxAge = null;
    #[Key('max_uses')]
    #[Description('')]
    protected ?int $maxUses = null;
    #[Description('')]
    protected ?bool $temporary = null;
    #[Description('')]
    protected ?bool $unique = null;
    #[Key('target_type')]
    #[Description('')]
    protected ?int $targetType = null;
    #[Key('target_user_id')]
    #[Description('')]
    protected ?string $targetUserId = null;
    #[Key('target_application_id')]
    #[Description('')]
    protected ?string $targetApplicationId = null;
    public function setMaxAge(?int $maxAge): void
    {
        $this->maxAge = $maxAge;
    }
    public function getMaxAge(): ?int
    {
        return $this->maxAge;
    }
    public function setMaxUses(?int $maxUses): void
    {
        $this->maxUses = $maxUses;
    }
    public function getMaxUses(): ?int
    {
        return $this->maxUses;
    }
    public function setTemporary(?bool $temporary): void
    {
        $this->temporary = $temporary;
    }
    public function getTemporary(): ?bool
    {
        return $this->temporary;
    }
    public function setUnique(?bool $unique): void
    {
        $this->unique = $unique;
    }
    public function getUnique(): ?bool
    {
        return $this->unique;
    }
    public function setTargetType(?int $targetType): void
    {
        $this->targetType = $targetType;
    }
    public function getTargetType(): ?int
    {
        return $this->targetType;
    }
    public function setTargetUserId(?string $targetUserId): void
    {
        $this->targetUserId = $targetUserId;
    }
    public function getTargetUserId(): ?string
    {
        return $this->targetUserId;
    }
    public function setTargetApplicationId(?string $targetApplicationId): void
    {
        $this->targetApplicationId = $targetApplicationId;
    }
    public function getTargetApplicationId(): ?string
    {
        return $this->targetApplicationId;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('max_age', $this->maxAge);
        $record->put('max_uses', $this->maxUses);
        $record->put('temporary', $this->temporary);
        $record->put('unique', $this->unique);
        $record->put('target_type', $this->targetType);
        $record->put('target_user_id', $this->targetUserId);
        $record->put('target_application_id', $this->targetApplicationId);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
